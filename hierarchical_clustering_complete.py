# -*- coding: utf-8 -*-
"""TEST_hierarchical_clustering_complete.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1NJK0ifFiTAp4FaU6Sc6-tKrgNpUBo_oV
"""

from google.colab import drive
drive.mount('/content/drive')

import matplotlib.pyplot as plt
import pandas as pd
import numpy as np
import seaborn as sns

customer_data = pd.read_csv('/content/drive/MyDrive/DATA/new_data_1.csv')
customer_data.head()

data = customer_data.iloc[:,2:7].values

data1 = customer_data.iloc[:,2:7]
data1

data2 = customer_data.iloc[:,2:7]

import scipy.cluster.hierarchy as shc

plt.figure(figsize=(10, 10))
plt.title("hierarchical")
# Valid options are dict_keys(['ward', 'complete', 'average', 'single'])
dend = shc.dendrogram(shc.linkage(data, method='complete'))

from sklearn.cluster import AgglomerativeClustering

# Valid options are dict_keys(['ward', 'complete', 'average', 'single'])
cluster = AgglomerativeClustering(n_clusters=8, affinity='euclidean', linkage='complete')
# cluster.fit_predict(data)

clu = cluster.fit_predict(data)
clu_2= pd.Series(clu)
pd.concat([customer_data,clu_2],axis=1)

customer_data['cluster_id']= pd.Series(clu)

customer_data.groupby('cluster_id').median()

plt.figure(figsize=(10, 7))
plt.scatter(data[:,0],data[:,1], c=cluster.labels_, cmap='rainbow')

df0 = pd.DataFrame(data1[cluster.fit_predict(data) == 0])
df0

pd.DataFrame(data1[cluster.fit_predict(data) == 1])

pd.DataFrame(data1[cluster.fit_predict(data) == 2])

pd.DataFrame(data1[cluster.fit_predict(data) == 3])

pd.DataFrame(data1[cluster.fit_predict(data) == 4])

pd.DataFrame(data1[cluster.fit_predict(data) == 5])

pd.DataFrame(data1[cluster.fit_predict(data) == 6])

pd.DataFrame(data1[cluster.fit_predict(data) == 7])

# pd.DataFrame(data1[cluster.fit_predict(data) == 8])

# pd.DataFrame(data1[cluster.fit_predict(data) == 9])

x = customer_data[['bus_stop_num','bus_all','old_all','taxi_all','ratio']]
pred = pd.DataFrame(cluster.fit_predict(data))
pred.columns = ['pre']
r = pd.concat([x,pred],axis = 1)
print(r)

# # clu = cluster.fit_predict(data)
# # data['cluster'] = cluster.fit_predict(data)


# clu=pd.Series(cluster.fit_predict(data))
# cluster = pd.Series(clu)
# pd.concat([customer_data,cluster],axis=1)

